#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>

void my_printf(int num)

{
	int n = num / 10;
	int r = num % 10;
	if (num > 9)
	{
		my_printf(n);

	}
	printf("%d ", r);
}
int count = 0;
int my_strlen(char*str)
{


	if (*str != '\0')
	{
		//count++;
		return 1 + my_strlen(str + 1);

	}

	return 0;
}

	int count1 = 0;

int Fib(int n)
{
	if (n == 3)
		count1++;
	if (n <= 2)
	{
		return 1;
	}
	else 
	{
		return Fib(n - 1) + Fib(n - 2);
	}
	//有些问题用递归算法写的虽然简单但是，对于电脑计算来说不友好，计算量太大
	int a, b, c;

	a = b = 1;
	if (n<= 2)
		return 1;
	for (int i = 3; 2<i &&   i <=n  ; i++)
	{
		c = a + b;
		a = b;
		b = c;
	}
	return c;
	//这样计算机算起来就快的不得了


}











int main()
{
	
	///*int num = 0;
	//scanf("%d", &num);
	//my_printf(num);*/
	////按顺序打印数字里面的字符

	//char arr[] = "absdfs";//{ 'k', 'a', 'j', 'd', 'h' };
	//int num = my_strlen(arr);
	////int sz = sizeof(arr) / sizeof(arr[0]);
	//printf("%d\n ", num);//第一种定义的的打印方法

	//char arr2[] = { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y','z'};
	//int num2 = my_strlen2(arr2);
	//printf("%d\n", num2);
	////两种定义数组的方法都是有下标的
	///*printf("%c\n", arr[0]);*/

	//int n = 0;
	//scanf("%d", &n);
	//int fibn = Fib(n);

	//printf("第n个斐波那契数是%d\n", fibn);
	//


	//汉诺塔问题求解 开始
	 











	return 0;
}


