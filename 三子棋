sqz.h
#define ROW 3
#define COL 3
void initboard(char board[ROW][COL], int row, int col);//数组的类型不可以搞错
void displayboard(char board[ROW][COL], int row, int col);
void menu();
void start();
void game();
#include<windows.h>
void Playmove(char board[ROW][COL],int row,int col);
#include<time.h>
char Winner( char board[ROW][COL], int row, int col);
void Computermove(char board[ROW][COL], int row, int col);
int Full(char board[ROW][COL], int row, int col);

sqz.c
#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include"szq.h"
void game()
{
	char board[ROW][COL] = { 0 };
	char ret1;
	initboard(board, ROW, COL);//这里就不是很明白了
	displayboard(board, ROW, COL);
	while (1)
	{
		Playmove(board, ROW, COL);
		displayboard(board, ROW, COL);
		ret1 = Winner(board, ROW, COL);
		if (ret1 != 'c')
			break;
		Computermove(board, ROW, COL);
		displayboard(board, ROW, COL);
		ret1 = Winner(board, ROW, COL);
		if (ret1 != 'c')
			break;
	}
	if (ret1 == '*')
		printf("玩家赢\n");
	if (ret1 == '#')
		printf("电脑赢\n");
	if (ret1 == 'q')
		printf("平局\n");
}
void menu()
{
	printf("********三子棋********\n");
	printf("******开始游戏 1 *****\n");
	printf("******退出游戏 0 *****\n");
}
void start()
{	
	int choose;
	do
	{	
		menu();
		scanf("%d", &choose);
		switch (choose)
		{
		case 1:
			printf("马上开始游戏\n");
			game();
			break;
		case 0:
			printf("已经退出游戏\n");
			break;
		default:
			printf("输入错误\n");
		}
	}
	while (choose);
}
void initboard(char board[ROW][COL], int row, int col)
{
	int i = 0; 
	int j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			board[i][j] = ' ';
		}
	}
}
void displayboard(char board[ROW][COL], int row, int col)
{
	int i;
	int j;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			printf(" %c ", board[i][j]);
			if (j< col - 1)
				printf("|");
		}
		printf("\n");
		if (i < row - 1)
		{
			for (j = 0; j < row ; j++)
			{
				printf("---");
				if (j< col - 1)
					printf("|");
			}
			printf("\n");
		}
	}
}
void Playmove(char board[ROW][COL], int row, int col)
{
	int x, y;
	printf("玩家走\n");
	while (1)
	{
		printf("请输入要走的坐标\n");
		scanf("%d%d", &x, &y);
		if (x <= row  && x >= 1, y <= col && y >= 1)
		{
			if (board[x - 1][y - 1] == ' ')
			{
				board[x - 1][y - 1] = '*';
				break;
			}
			else
				printf("该坐标已被占用\n");
		}
		else
			printf("输入无效坐标\n");
	}

}
void Computermove(char board[ROW][COL], int row, int col)
{
	int x, y;
	printf("电脑走\n");
	while (1)
	{
		x = rand() % row;
		y = rand() % col;
		if (board[x][y] == ' ')
		{
			board[x][y] = '#';
			break;
		}
	}
}
char Winner(char board[ROW][COL], int row, int col)
{
	for (int i = 0; i < row; i++)
	{
		if (board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][2] != ' ')
			return board[i][0];
	}
	for (int j = 0; j < col; j++)
	{
		if (board[0][j] == board[1][j] && board[1][j] == board[2][j] && board[2][j] != ' ')
			return board[0][j];
	}
	if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[2][2] != ' ')
		return board[0][0];
	if (board[0][2] == board[1][1] && board[1][1] == board[2][0] && board[2][0] != ' ')
		return board[1][1];
	if (1 == Full(board, ROW, COL))
		return 'q';
	else
		return 'c';
}
int Full(char board[ROW][COL], int row, int col)
{
	for (int i = 0; i <= row; i++)
	{
		for (int j = 0; j <= col; j++)
		{
			if (board[i][j] == ' ')
				return 0;
		}
	}
	return 1;
}

sqz_test.c
#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include"szq.h"
#include <windows.h>
int main()
{
	srand((unsigned int)time(NULL));
	start();
	return 0;
}





